sky.main {
    
    frame : 0
    fps : (1...60=60)

    shader {
        uniform {
            shift : (0...1=0)
        }
        fragment {{ #version 300 es

            in highp vec2 vTexCoord;
            out highp vec4 fragColor;

            precision highp float;
            uniform sampler2D drawBuf; // 2D texture
            uniform sampler2D drawPal; // 256x1 color palette for texture
            uniform float fade; // fade key slider value

            void main () {
                vec4 realColor   = texture(drawBuf, vTexCoord.xy);
                vec4 falseColorB = texture(drawPal, vec2(realColor.b,0.));
                vec4 falseColorR = texture(drawPal, vec2(realColor.r,0.));
                float fadeInverse = 1.-fade;
                fragColor = vec4(falseColorR.r * fadeInverse + falseColorB.r * fade,
                                 falseColorR.g * fadeInverse + falseColorB.g * fade,
                                 falseColorR.b * fadeInverse + falseColorB.b * fade, 1.);
            }
        }}
        vertex {{ #version 300 es

            in mediump vec4 aPosition;
            in mediump vec2 aTexCoord;
            out mediump vec2 vTexCoord;

            void main() {
                gl_Position = aPosition;
                vTexCoord = aTexCoord.xy;
            }
        }}
    }
}
